/**
  * add support here for all JS-based config options,
  * assigning them to the web component's HTML attributes
  */
function configureSMWidget() {
  return {
    configure: (options) => {
      const el = document.createElement('sm-widget');

      if (options.tokenServer) {
        el.setAttribute('token-server', options.tokenServer);
      }

      if (options.apiKey) {
        el.setAttribute('api-key', options.apiKey);
      }

      if (options.autoconnect) {
        el.setAttribute('autoconnect', options.autoconnect);
      }

      if (options.profilePicture) {
        el.setAttribute('profile-picture', options.profilePicture);
      }

      if (options.greeting) {
        el.setAttribute('greeting', options.greeting);
      }

      document.body.appendChild(el);
    },
  };
}

function createCSSLink(fileName) {
  var link = document.createElement('link');
  link.type = "text/css";
  link.rel = "stylesheet";
  link.href = fileName;
  return link;
}

function createJsScript(fileName) {
  var script = document.createElement('script');
  script.type = 'module';
  script.async = false;
  script.defer = true;
  script.src = fileName;

  return script;
}

function insertIntoHead(el) {
  var parentScript = document.getElementsByTagName('script')[0];
  parentScript.parentNode.insertBefore(el, parentScript);
}

(function () {
  var cssFileNames = '{{ cssFileNames }}'.split(',');
  var script = createJsScript('{{javascriptFileName}}');
  var cssLinks = cssFileNames.map((fileName) => createCSSLink(fileName));

  /**
   * On every page where the web component is imported,
   * a property `sm` will be attached to the global `window`
   * object, so that the web page inline JS can call `window.sm()`
   * to configure the web component widget.
   */
  window['sm'] = configureSMWidget();

  script.onload = () => {
    window.sm.configure(window.SM_CONFIG || {});
  };

  window.addEventListener('DOMContentLoaded', () => {
    cssLinks.forEach((link) =>   insertIntoHead(link));
    insertIntoHead(script);
  });
})();
