name: Release Dev

on:
  push:
    branches:
      # - master
      - quic-1884-fix-pipeline

permissions:
  id-token: write # Required for configure AWS credentials
  contents: read # Required for checkout the source code

env:
  ASSET_LOCATION: dist
  AWS_PATH: 's3://static-prod.soulmachines.com/dev'
  AWS_DEFAULT_OUTPUT: 'json'
  AWS_DEFAULT_REGION: 'us-east-1'
  AWS_ROLE_ARN: arn:aws:iam::924390807111:role/static_sm_com_GHA_Role
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_VERSION: ${{ steps.RELEASE_VERSION.outputs.tag }}

    steps:
      - name: Checkout Source Code
        id: RELEASE_VERSION
        uses: actions/checkout@v3
        run: |
          version=$(git rev-parse --short HEAD)
          echo "::set-output name=tag::${version}"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.14.2'

      - name: Caching Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Build Package
        run: npm run build
        env:
          NODE_ENV: production
          CDN_ENDPOINT: 'https://static.soulmachines.com/dev/'
          # Since we are not using semantic release in dev, use the commit hash for versioning so its traceable
          VERSION: ${{ needs.release.outputs.RELEASE_VERSION }}

      - name: Configure AWS credential
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Release to CDN
        run: |
          aws s3 cp --sse AES256 ${{ env.ASSET_LOCATION }} ${{ env.AWS_PATH }}/ --recursive
          aws cloudfront create-invalidation --distribution-id=${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
          echo "dev release done"
