name: Release

on:
  push:
    tags:
      - '*.*.*'

env:
  RELEASE_VERSION: ${GITHUB_REF#refs/*/}
  ASSET_LOCATION: demo/soulmachines.js
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
  CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID}}
  AWS_DEFAULT_OUTPUT: 'json'
  AWS_DEFAULT_REGION: 'us-east-1'

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'

      - name: Caching Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install with auth token so we can access @soulmachines/* private packages
      - name: Set registry path and credentials for internal builds
        run: echo "@soulmachines:registry=https://npm.pkg.github.com/soulmachines" > .npmrc && echo "//npm.pkg.github.com/:_authToken=${{ secrets.SMGITHUBBOT_READ_PACKAGES }}" >> .npmrc

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

      - name: Run Tests
        run: npm run test-ci

      - name: Run Prettier
        run: npm run prettier

      - name: Build Asset
        run: npm run package

      # upload to aws s3
      - name: Upload current version to S3 Bucket
        run: aws s3 cp --sse AES256 ${{ env.ASSET_LOCATION }} s3://static-prod.soulmachines.com/soulmachines-${{ env.RELEASE_VERSION}}.js

      - name: Upload latest version to S3 Bucket
        run: aws s3 cp --sse AES256 ${{ env.ASSET_LOCATION }} s3://static-prod.soulmachines.com/soulmachines-latest.js

      # refresh the cache in edge servers
      - name: Invalidate Cloudfront CDN
        run: aws cloudfront create-invalidation --distribution-id=${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
